package com.mp_Poder.blocks;

import java.util.List;
import java.util.Random;

import net.minecraft.block.Block;
import net.minecraft.block.BlockSlab;
import net.minecraft.block.material.Material;
import net.minecraft.block.properties.IProperty;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.entity.EntityLiving;
import net.minecraft.item.ItemStack;
import net.minecraft.world.World;

public class PaintSlabB extends BlockSlab
{
public PaintSlabB(Material materialIn) {
		super(materialIn);
	}

public static final String[] woodType = { "RedWood" };

public int idDropped(int par1, Random par2Random, int par3)
{
return BlockRegistry.RedWoodSlabHalf.getIdFromBlock(BlockRegistry.RedWoodSlabHalf);
}

public void onBlockPlacedBy(World par1World, int par2, int par3, int par4, EntityLiving par5EntityLiving)
{
if(par1World.getBlockId(par2, par3 - 1, par4) == BlockRegistry.RedWoodSlabHalf.blockID)
{
par1World.setBlock(par2, par3, par4, 0);
par1World.setBlock(par2, par3 - 1, par4, ObsidianMod.obsidianBrickDouble.blockID);
}
if(par1World.getBlockId(par2, par3 + 1, par4) == BlockRegistry.RedWoodSlabHalf.blockID)
{
par1World.setBlock(par2, par3, par4, 0);
par1World.setBlock(par2, par3 + 1, par4, ObsidianMod.obsidianBrickDouble.blockID);
}
}

protected ItemStack createStackedBlock(int par1)
{
return new ItemStack(BlockRegistry.RedWoodSlabHalf, 2, par1 & 7);
}

public String getFullSlabName(int par1)
{
if ((par1 < 0) || (par1 >= woodType.length))
{
par1 = 0;
}

return super.getUnlocalizedName() + "." + woodType[par1];
}

public void getSubBlocks(int par1, CreativeTabs par2CreativeTabs, List par3List)
{
if (par1 != BlockRegistry.RedWoodSlabUpper.getIdFromBlock(BlockRegistry.RedWoodSlabUpper))
{
par3List.add(new ItemStack(BlockRegistry.RedWood.getBlockById(par1), 1, 0));
}
}

@Override
public String getUnlocalizedName(int meta) {
	
	return null;
}

@Override
public boolean isDouble() {
	
	return false;
}

@Override
public IProperty getVariantProperty() {
	
	return null;
}

@Override
public Object getVariant(ItemStack stack) {
	
	return null;
}

}